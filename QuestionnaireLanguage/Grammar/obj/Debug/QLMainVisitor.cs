//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Jonatan\Desktop\QL Github\ql\QuestionnaireLanguage\Grammar\QLMain.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="QLMainParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IQLMainVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>BoolType</c>
	/// labeled alternative in <see cref="QLMainParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolType([NotNull] QLMainParser.BoolTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>KvpLiteral</c>
	/// labeled alternative in <see cref="QLMainParser.keyValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKvpLiteral([NotNull] QLMainParser.KvpLiteralContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.formObject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormObject([NotNull] QLMainParser.FormObjectContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="QLMainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOr([NotNull] QLMainParser.OrContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.conditional"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditional([NotNull] QLMainParser.ConditionalContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] QLMainParser.StringContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>StringType</c>
	/// labeled alternative in <see cref="QLMainParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringType([NotNull] QLMainParser.StringTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>TrueBool</c>
	/// labeled alternative in <see cref="QLMainParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTrueBool([NotNull] QLMainParser.TrueBoolContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>KvpArithmetic</c>
	/// labeled alternative in <see cref="QLMainParser.keyValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKvpArithmetic([NotNull] QLMainParser.KvpArithmeticContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>BoolValue</c>
	/// labeled alternative in <see cref="QLMainParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolValue([NotNull] QLMainParser.BoolValueContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>PriorityArithmetic</c>
	/// labeled alternative in <see cref="QLMainParser.arithmetic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPriorityArithmetic([NotNull] QLMainParser.PriorityArithmeticContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>IntType</c>
	/// labeled alternative in <see cref="QLMainParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntType([NotNull] QLMainParser.IntTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>BoolExpression</c>
	/// labeled alternative in <see cref="QLMainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolExpression([NotNull] QLMainParser.BoolExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.keyValuePairs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyValuePairs([NotNull] QLMainParser.KeyValuePairsContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>FalseBool</c>
	/// labeled alternative in <see cref="QLMainParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFalseBool([NotNull] QLMainParser.FalseBoolContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitId([NotNull] QLMainParser.IdContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Equality</c>
	/// labeled alternative in <see cref="QLMainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality([NotNull] QLMainParser.EqualityContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>DivMul</c>
	/// labeled alternative in <see cref="QLMainParser.arithmetic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivMul([NotNull] QLMainParser.DivMulContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>StringValue</c>
	/// labeled alternative in <see cref="QLMainParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringValue([NotNull] QLMainParser.StringValueContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>IntValue</c>
	/// labeled alternative in <see cref="QLMainParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntValue([NotNull] QLMainParser.IntValueContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>KvpExpression</c>
	/// labeled alternative in <see cref="QLMainParser.keyValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKvpExpression([NotNull] QLMainParser.KvpExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKey([NotNull] QLMainParser.KeyContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>IntArithmetic</c>
	/// labeled alternative in <see cref="QLMainParser.arithmetic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntArithmetic([NotNull] QLMainParser.IntArithmeticContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>SubAdd</c>
	/// labeled alternative in <see cref="QLMainParser.arithmetic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubAdd([NotNull] QLMainParser.SubAddContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.question"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuestion([NotNull] QLMainParser.QuestionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>PriorityExpression</c>
	/// labeled alternative in <see cref="QLMainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPriorityExpression([NotNull] QLMainParser.PriorityExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>PriorityComparison</c>
	/// labeled alternative in <see cref="QLMainParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPriorityComparison([NotNull] QLMainParser.PriorityComparisonContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInt([NotNull] QLMainParser.IntContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ComparisonExpression</c>
	/// labeled alternative in <see cref="QLMainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonExpression([NotNull] QLMainParser.ComparisonExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.form"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForm([NotNull] QLMainParser.FormContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="QLMainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnd([NotNull] QLMainParser.AndContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>IdArithmetic</c>
	/// labeled alternative in <see cref="QLMainParser.arithmetic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdArithmetic([NotNull] QLMainParser.IdArithmeticContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>IdExpression</c>
	/// labeled alternative in <see cref="QLMainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdExpression([NotNull] QLMainParser.IdExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="QLMainParser.formSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormSection([NotNull] QLMainParser.FormSectionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Negate</c>
	/// labeled alternative in <see cref="QLMainParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegate([NotNull] QLMainParser.NegateContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>RelationalComparison</c>
	/// labeled alternative in <see cref="QLMainParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalComparison([NotNull] QLMainParser.RelationalComparisonContext context);
}
} // namespace Grammar
